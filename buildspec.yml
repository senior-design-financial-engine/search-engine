version: 0.2
# Root-level universal buildspec that handles both frontend and backend builds

phases:
  install:
    runtime-versions:
      nodejs: 16
      python: 3.9
    commands:
      - echo "Installing dependencies for universal build"
      - npm --version
      - python --version
      - echo "Directory structure:"
      - find . -type d -maxdepth 3 | sort
      - echo "Buildspec files in workspace:"
      - find . -name "*buildspec*.yml" -o -name "*deploy*.yml" | sort
  
  pre_build:
    commands:
      - echo "Running pre-build steps"
      - if [ -d "frontend" ]; then
          echo "Preparing frontend build";
          cd frontend;
          echo "Installing frontend dependencies";
          npm install --production=false;
          echo "Validating package installation";
          npm list date-fns || npm install date-fns@2.30.0;
          cd ..;
        fi
      - if [ -d "backend" ]; then
          echo "Preparing backend build";
          cd backend;
          echo "Installing backend dependencies";
          pip install -r requirements.txt;
          pip install pytest pytest-cov;
          cd ..;
        fi
  
  build:
    commands:
      - echo "Building the application"
      - if [ -d "frontend" ]; then
          echo "Building frontend";
          cd frontend;
          npm run build;
          cd ..;
        fi
      - if [ -d "backend" ]; then
          echo "Building backend";
          cd backend;
          mkdir -p dist;
          zip -r dist/backend.zip .;
          cd ..;
        fi
  
  post_build:
    commands:
      - echo "Creating unified artifact structure"
      - mkdir -p artifact_output
      - mkdir -p artifact_output/scripts
      - cp -r backend artifact_output/
      - cp -r frontend artifact_output/
      - if [ -d "deployment-scripts" ]; then cp -r deployment-scripts/* artifact_output/scripts/; fi
      - if [ -d "backend/backend-scripts" ]; then cp -r backend/backend-scripts/* artifact_output/scripts/; fi
      - echo "Adding configuration files"
      - mkdir -p artifact_output/buildspecs
      - if [ -d "buildspecs" ]; then cp -r buildspecs/* artifact_output/buildspecs/; fi
      - find . -name "*.yml" -maxdepth 1 -type f -exec cp {} artifact_output/ \; || true
      - find . -name "*.yaml" -maxdepth 1 -type f -exec cp {} artifact_output/ \; || true
      - echo "Final artifact contents:"
      - find artifact_output -type f | sort

artifacts:
  base-directory: artifact_output
  files:
    - '**/*'
  discard-paths: no

cache:
  paths:
    - 'frontend/node_modules/**/*'
    - '/root/.cache/pip' 