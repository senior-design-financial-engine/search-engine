AWSTemplateFormatVersion: '2010-09-09'
Description: 'Frontend Infrastructure for Financial News Engine'

Parameters:
  EnvironmentName:
    Description: Environment name
    Type: String
    Default: production
    AllowedValues:
      - development
      - staging
      - production
  
  DomainName:
    Description: Domain name for the application (optional, leave empty to use CloudFront domain)
    Type: String
    Default: "financialnewsengine.com"
  
  CreateRoute53Records:
    Description: Whether to create Route 53 records (set to false if DomainName is empty)
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  
  HostedZoneId:
    Description: Route 53 Hosted Zone ID (required only if CreateRoute53Records is true)
    Type: String
    Default: ""
  
  BackendStackName:
    Description: Name of the backend CloudFormation stack
    Type: String
    Default: financial-news-backend

Conditions:
  HasDomainName: !Not [!Equals [!Ref DomainName, ""]]
  CreateDNSRecords: !And 
    - !Equals [!Ref CreateRoute53Records, "true"]
    - !Not [!Equals [!Ref DomainName, ""]]
    - !Not [!Equals [!Ref HostedZoneId, ""]]

Resources:
  # S3 bucket for static website hosting
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "financial-news-frontend-${AWS::AccountId}-${EnvironmentName}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-frontend-bucket
        - Key: Environment
          Value: !Ref EnvironmentName

  # S3 bucket policy
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOAI}"
            Action: 's3:GetObject'
            Resource: !Sub "${FrontendBucket.Arn}/*"

  # CloudFront Origin Access Identity
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "OAI for ${EnvironmentName} Financial News Frontend"

  # CloudFront distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        PriceClass: PriceClass_100
        HttpVersion: http2
        ViewerCertificate:
          !If
            - HasDomainName
            - AcmCertificateArn: !Ref SSLCertificate
              MinimumProtocolVersion: TLSv1.2_2021
              SslSupportMethod: sni-only
            - CloudFrontDefaultCertificate: true
        Aliases: !If
          - HasDomainName
          - - !Ref DomainName
            - !Sub "www.${DomainName}"
          - !Ref AWS::NoValue
        Origins:
          - DomainName: !GetAtt FrontendBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          MinTTL: 0
          DefaultTTL: 3600
          MaxTTL: 86400
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-frontend-distribution
        - Key: Environment
          Value: !Ref EnvironmentName

  # SSL Certificate (only created if domain name is provided)
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Condition: HasDomainName
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub "www.${DomainName}"
      ValidationMethod: DNS
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-frontend-certificate
        - Key: Environment
          Value: !Ref EnvironmentName

  # Route 53 Record Set (only created if domain name and hosted zone ID are provided)
  DomainRecordSet:
    Type: AWS::Route53::RecordSet
    Condition: CreateDNSRecords
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID (this is fixed)
        EvaluateTargetHealth: false

  WwwDomainRecordSet:
    Type: AWS::Route53::RecordSet
    Condition: CreateDNSRecords
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "www.${DomainName}"
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID (this is fixed)
        EvaluateTargetHealth: false

  # IAM User for CI/CD deployment
  DeploymentUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub "financial-news-frontend-deployer-${EnvironmentName}"
      Path: /
      Policies:
        - PolicyName: S3DeploymentPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource:
                  - !GetAtt FrontendBucket.Arn
                  - !Sub "${FrontendBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - 'cloudfront:CreateInvalidation'
                Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-frontend-deployer
        - Key: Environment
          Value: !Ref EnvironmentName

  # Access Key for the deployment user
  DeploymentUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref DeploymentUser

  # Secret for storing the access key (safer than outputting it directly)
  DeploymentCredentialsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "financial-news-frontend-deployer-credentials-${EnvironmentName}"
      Description: "Access credentials for the frontend deployment user"
      SecretString: !Sub '{"AccessKey": "${DeploymentUserAccessKey}", "SecretKey": "${DeploymentUserAccessKey.SecretAccessKey}"}'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-frontend-deployer-credentials
        - Key: Environment
          Value: !Ref EnvironmentName

Outputs:
  FrontendBucketName:
    Description: Name of the S3 bucket hosting the frontend
    Value: !Ref FrontendBucket
    Export:
      Name: !Sub "${AWS::StackName}-FrontendBucketName"
  
  CloudFrontDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDomainName"
  
  CloudFrontDistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDistributionId"
  
  WebsiteURL:
    Description: URL for the website
    Value: !If
      - HasDomainName
      - !Sub "https://${DomainName}"
      - !Sub "https://${CloudFrontDistribution.DomainName}"
    Export:
      Name: !Sub "${AWS::StackName}-WebsiteURL"
  
  DeploymentUserName:
    Description: Username of the IAM user for frontend deployment
    Value: !Ref DeploymentUser
    Export:
      Name: !Sub "${AWS::StackName}-DeploymentUserName"
  
  DeploymentCredentialsSecretName:
    Description: Name of the secret containing deployment credentials
    Value: !Ref DeploymentCredentialsSecret
    Export:
      Name: !Sub "${AWS::StackName}-DeploymentCredentialsSecretName" 