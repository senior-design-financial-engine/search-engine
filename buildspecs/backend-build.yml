version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing dependencies..."
      - cd backend
      - python -m pip install --upgrade pip
      - pip install pytest pytest-cov flake8
      - pip install -r requirements.txt
  
  pre_build:
    commands:
      - echo "Running tests and linting..."
      - flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "Linting issues found, but continuing..."
      - pytest --cov=./ --cov-report=xml || echo "Some tests failed, but continuing..."
  
  build:
    commands:
      - echo "Building the backend deployment package..."
      - mkdir -p dist
      - zip -r dist/backend.zip .
      - echo "Build completed on $(date)"
  
  post_build:
    commands:
      - echo "Backend post-build phase completed"
      - cd ..
      - echo "Creating full artifact structure"
      - mkdir -p artifact_output/backend
      - mkdir -p artifact_output/scripts
      - echo "Copying backend files"
      - cp -r backend/dist artifact_output/backend/
      - if [ -f "appspec.yml" ]; then cp appspec.yml artifact_output/; fi
      - if [ -d "deployment-scripts" ]; then cp -r deployment-scripts/* artifact_output/scripts/; fi
      - if [ -d "backend/backend-scripts" ]; then cp -r backend/backend-scripts/* artifact_output/scripts/; fi
      - if [ -d "buildspecs" ]; then cp -r buildspecs artifact_output/; fi
      - find . -name "*.yml" -maxdepth 1 -type f -exec cp {} artifact_output/ \; || true
      - echo "Contents of artifact output:"
      - find artifact_output -type f | sort

artifacts:
  base-directory: artifact_output
  files:
    - '**/*'
  discard-paths: no

cache:
  paths:
    - '/root/.cache/pip' 