version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo "Running frontend deployment from buildspecs..."
      - echo "Debugging workspace contents:"
      - ls -la
      - echo "Checking frontend directory:"
      - ls -la frontend || echo "No frontend directory found"
  
  pre_build:
    commands:
      - echo "Preparing for deployment..."
      - find . -name "build" -type d | sort
      - find . -name "package.json" -type f | sort
      - echo "Checking for build artifacts..."
      - |
        # Check for index.html in root to determine if build artifacts are already in root
        if [ -f "index.html" ] && [ -d "static" ]; then
          echo "Found build artifacts directly in root directory"
          BUILD_DIR="."
        elif [ -d "build" ]; then
          echo "Found build directory at root level"
          BUILD_DIR="build"
        elif [ -d "frontend/build" ]; then
          echo "Found build directory in frontend folder"
          BUILD_DIR="frontend/build"
        elif [ ! -d "build" ] && [ ! -d "frontend/build" ]; then
          echo "No build directory found, attempting to build from source..."
          if [ -d "frontend" ]; then
            cd frontend
            echo "Installing dependencies..."
            npm install
            echo "Building frontend..."
            npm run build
            cd ..
            mkdir -p build
            cp -r frontend/build/* build/
            BUILD_DIR="build"
          else
            echo "ERROR: No frontend directory or build artifacts found"
            exit 1
          fi
        fi
  
  build:
    commands:
      - echo "Preparing deployment artifacts..."
      - echo "Listing contents of current directory:"
      - ls -la
      - echo "Using build directory: $BUILD_DIR"
  
  post_build:
    commands:
      - echo "Retrieving S3 bucket name from CloudFormation stack..."
      - BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name $FRONTEND_STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='FrontendBucketName'].OutputValue" --output text)
      - if [ -z "$BUCKET_NAME" ]; then
          echo "ERROR: Could not retrieve bucket name from CloudFormation stack";
          exit 1;
        fi
      - echo "Retrieved bucket name: $BUCKET_NAME"
      - echo "Syncing build files to S3 bucket..."
      - aws s3 sync $BUILD_DIR/ s3://$BUCKET_NAME/ --delete
      - echo "Creating CloudFront invalidation..."
      - CLOUDFRONT_ID=$(aws cloudformation describe-stacks --stack-name $FRONTEND_STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" --output text)
      - if [ -n "$CLOUDFRONT_ID" ]; then
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*";
        else
          echo "WARNING: Could not retrieve CloudFront distribution ID";
        fi
      - echo "Frontend deployment completed successfully!"

artifacts:
  files:
    - '**/*'
  base-directory: $BUILD_DIR
  discard-paths: no

cache:
  paths:
    - 'node_modules/**/*' 