version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo "Installing frontend dependencies..."
      - pwd
      - ls -la
      - echo "Checking directory structure"
      - if [ -d "frontend" ]; then cd frontend; elif [ -d "../frontend" ]; then cd ../frontend; fi
      - npm install
  
  pre_build:
    commands:
      - echo "Retrieving search service credentials from SSM Parameter Store..."
      - |
        if [ -n "$PARAM_PREFIX" ]; then
          echo "Using parameter prefix: $PARAM_PREFIX"
        else
          PARAM_PREFIX="/financial-news"
          echo "Using default parameter prefix: $PARAM_PREFIX"
        fi
      - |
        # Retrieve parameters from SSM Parameter Store
        ES_URL=$(aws ssm get-parameter --name "$PARAM_PREFIX/elasticsearch-url" --with-decryption --query "Parameter.Value" --output text || echo "")
        ES_API_KEY=$(aws ssm get-parameter --name "$PARAM_PREFIX/elasticsearch-api-key" --with-decryption --query "Parameter.Value" --output text || echo "")
        ES_INDEX=$(aws ssm get-parameter --name "$PARAM_PREFIX/elasticsearch-index" --query "Parameter.Value" --output text || echo "financial_news")
        
        # Create .env file with parameters
        echo "Creating .env file with search service parameters"
        echo "REACT_APP_ELASTICSEARCH_URL=$ES_URL" > .env
        echo "REACT_APP_ELASTICSEARCH_API_KEY=$ES_API_KEY" >> .env
        echo "REACT_APP_ELASTICSEARCH_INDEX=$ES_INDEX" >> .env
        echo "REACT_APP_API_URL=$BACKEND_API_URL" >> .env
        echo "REACT_APP_API_FALLBACK_URL=$BACKEND_API_URL" >> .env
        
        # Log success (without revealing sensitive values)
        if [ -n "$ES_URL" ] && [ -n "$ES_API_KEY" ]; then
          echo "Successfully injected search service credentials into build environment"
        else
          echo "Warning: Some search service parameters could not be retrieved. Build may proceed with reduced functionality."
        fi
      - echo "Running tests..."
      - npm test -- --watchAll=false --testEnvironment=jsdom || echo "Some tests failed, but continuing with build..."
  
  build:
    commands:
      - echo "Building the frontend..."
      - npm run build
      - echo "Build completed on $(date)"
  
  post_build:
    commands:
      - echo "Post-build phase completed successfully"
      - echo "Setting up artifact structure"
      - cd ..  # Return to root directory
      - mkdir -p artifact_output
      - mkdir -p artifact_output/frontend  # Create the frontend directory inside artifact_output
      - echo "Copying frontend build files"
      - cp -r frontend/build/* artifact_output/frontend/
      - echo "Copying buildspecs directory"
      - cp -r buildspecs artifact_output/
      - echo "Copying root-level buildspec files"
      - cp *.yml artifact_output/ || true
      - echo "Copying deployment scripts"
      - mkdir -p artifact_output/scripts
      - cp -r deployment-scripts/* artifact_output/scripts/ || true
      - echo "Contents of the artifact_output directory:"
      - ls -la artifact_output
      - find artifact_output -type f | sort

artifacts:
  base-directory: artifact_output
  files:
    - '**/*'

cache:
  paths:
    - 'frontend/node_modules/**/*' 